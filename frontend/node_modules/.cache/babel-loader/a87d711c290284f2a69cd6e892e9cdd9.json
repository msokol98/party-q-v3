{"ast":null,"code":"var _jsxFileName = \"/home/mitchell/party-q/frontend/src/pages/Party/index.js\",\n    _s = $RefreshSig$();\n\nimport { Redirect } from 'react-router';\nimport { useQuery } from 'react-query';\nimport is404 from 'helpers/is404';\nimport partyAdapter from 'api/partyAdapter';\nimport Party from './Party';\nimport React, { useState } from 'react';\nimport WebSocketClient from 'components/WebSocketClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst PartyContainer = () => {\n  _s();\n\n  const {\n    data: party,\n    error\n  } = useQuery('party', () => partyAdapter.index());\n  const [outgoingUpdate, setOutgoingUpdate] = useState();\n  const [incomingUpdate, setIncomingUpdate] = useState();\n\n  if (error && is404(error)) {\n    return /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 15\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(WebSocketClient, {\n      outgoingUpdate: outgoingUpdate,\n      onUpdate: setIncomingUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this), party && /*#__PURE__*/_jsxDEV(Party, {\n      party: party\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: incomingUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setOutgoingUpdate(\"a new message!!!!!\"),\n      children: \"Send Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(PartyContainer, \"wX2prI7E/b7qAD+Li1NJycPnipU=\", false, function () {\n  return [useQuery];\n});\n\n_c = PartyContainer;\nexport default PartyContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"PartyContainer\");","map":{"version":3,"sources":["/home/mitchell/party-q/frontend/src/pages/Party/index.js"],"names":["Redirect","useQuery","is404","partyAdapter","Party","React","useState","WebSocketClient","PartyContainer","data","party","error","index","outgoingUpdate","setOutgoingUpdate","incomingUpdate","setIncomingUpdate"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,cAAzB;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAOC,KAAP,MAAkB,eAAlB;AACA,OAAOC,YAAP,MAAyB,kBAAzB;AAEA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,eAAP,MAA4B,4BAA5B;;;;AAEA,MAAMC,cAAc,GAAG,MAAM;AAAA;;AAEzB,QAAM;AAAEC,IAAAA,IAAI,EAAEC,KAAR;AAAeC,IAAAA;AAAf,MAAyBV,QAAQ,CAAC,OAAD,EAAU,MAAME,YAAY,CAACS,KAAb,EAAhB,CAAvC;AAEA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCR,QAAQ,EAApD;AACA,QAAM,CAACS,cAAD,EAAiBC,iBAAjB,IAAsCV,QAAQ,EAApD;;AAEA,MAAGK,KAAK,IAAIT,KAAK,CAACS,KAAD,CAAjB,EAA0B;AACvB,wBAAO,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAP;AACF;;AAED,sBACI;AAAA,4BACI,QAAC,eAAD;AAAiB,MAAA,cAAc,EAAEE,cAAjC;AAAiD,MAAA,QAAQ,EAAEG;AAA3D;AAAA;AAAA;AAAA;AAAA,YADJ,EAEKN,KAAK,iBAAI,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEA;AAAd;AAAA;AAAA;AAAA;AAAA,YAFd,eAII;AAAA,gBAAMK;AAAN;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAQ,MAAA,OAAO,EAAE,MAAMD,iBAAiB,CAAC,oBAAD,CAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ;AAAA,kBADJ;AASH,CApBD;;GAAMN,c;UAE6BP,Q;;;KAF7BO,c;AAsBN,eAAeA,cAAf","sourcesContent":["import { Redirect } from 'react-router';\nimport { useQuery } from 'react-query';\n\nimport is404 from 'helpers/is404';\nimport partyAdapter from 'api/partyAdapter';\n\nimport Party from './Party';\nimport React, { useState } from 'react';\n\nimport WebSocketClient from 'components/WebSocketClient';\n\nconst PartyContainer = () => {\n\n    const { data: party, error } = useQuery('party', () => partyAdapter.index());\n\n    const [outgoingUpdate, setOutgoingUpdate] = useState();\n    const [incomingUpdate, setIncomingUpdate] = useState();\n\n    if(error && is404(error)) {\n       return <Redirect to=\"/\" />\n    }\n\n    return(\n        <>\n            <WebSocketClient outgoingUpdate={outgoingUpdate} onUpdate={setIncomingUpdate} />\n            {party && <Party party={party} />}\n\n            <div>{incomingUpdate}</div>\n            <button onClick={() => setOutgoingUpdate(\"a new message!!!!!\")}>Send Update</button>\n        </>\n    );\n}\n\nexport default PartyContainer;"]},"metadata":{},"sourceType":"module"}