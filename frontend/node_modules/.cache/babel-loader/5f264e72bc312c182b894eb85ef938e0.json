{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useLocation } from 'react-router-dom';\nimport crudClient from 'api/crudClient';\nimport spotifyClient from 'api/spotifyClient';\nimport qs from 'qs';\n\nconst useToken = () => {\n  _s();\n\n  const {\n    data: user\n  } = useQuery('spotifyUser', () => spotifyClient.getUser());\n  const location = useLocation();\n  const token = qs.parse(location.search, {\n    ignoreQueryPrefix: true\n  }).access_token;\n  const oldToken = localStorage.getItem('jwt');\n\n  if (!oldToken || oldToken !== token) {\n    updateToken(user, token);\n  }\n\n  return token;\n};\n\n_s(useToken, \"bMHRF3vC0FjzKvsmoyGjxdNqAIg=\", true, function () {\n  return [useLocation];\n});\n\nconst updateToken = (user, token) => {\n  console.log(user); //crudClient('members').partialUpdate(id, {token}).then(console.log).catch(console.log);\n\n  localStorage.setItem('token', token);\n};\n\nexport default useToken;","map":{"version":3,"sources":["/home/mitchell/party-q/frontend/src/hooks/useToken.js"],"names":["useLocation","crudClient","spotifyClient","qs","useToken","data","user","useQuery","getUser","location","token","parse","search","ignoreQueryPrefix","access_token","oldToken","localStorage","getItem","updateToken","console","log","setItem"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,OAAOC,aAAP,MAA0B,mBAA1B;AACA,OAAOC,EAAP,MAAe,IAAf;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAM;AAAEC,IAAAA,IAAI,EAAEC;AAAR,MAAiBC,QAAQ,CAAC,aAAD,EAAgB,MAAML,aAAa,CAACM,OAAd,EAAtB,CAA/B;AAEA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;AAEA,QAAMU,KAAK,GAAGP,EAAE,CAACQ,KAAH,CAASF,QAAQ,CAACG,MAAlB,EAA0B;AAAEC,IAAAA,iBAAiB,EAAE;AAArB,GAA1B,EAAuDC,YAArE;AACA,QAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAjB;;AAEA,MAAG,CAACF,QAAD,IAAaA,QAAQ,KAAKL,KAA7B,EAAoC;AAEhCQ,IAAAA,WAAW,CAACZ,IAAD,EAAOI,KAAP,CAAX;AACH;;AAED,SAAOA,KAAP;AACH,CAdD;;GAAMN,Q;UAGeJ,W;;;AAarB,MAAMkB,WAAW,GAAG,CAACZ,IAAD,EAAOI,KAAP,KAAiB;AACjCS,EAAAA,OAAO,CAACC,GAAR,CAAYd,IAAZ,EADiC,CAEjC;;AACAU,EAAAA,YAAY,CAACK,OAAb,CAAqB,OAArB,EAA8BX,KAA9B;AACH,CAJD;;AAMA,eAAeN,QAAf","sourcesContent":["import { useLocation } from 'react-router-dom';\n\nimport crudClient from 'api/crudClient';\nimport spotifyClient from 'api/spotifyClient';\nimport qs from 'qs';\n\nconst useToken = () => {\n    const { data: user } = useQuery('spotifyUser', () => spotifyClient.getUser());\n\n    const location = useLocation();\n\n    const token = qs.parse(location.search, { ignoreQueryPrefix: true }).access_token;\n    const oldToken = localStorage.getItem('jwt');\n    \n    if(!oldToken || oldToken !== token) {\n    \n        updateToken(user, token);\n    }\n\n    return token;\n};\n\nconst updateToken = (user, token) => {\n    console.log(user)\n    //crudClient('members').partialUpdate(id, {token}).then(console.log).catch(console.log);\n    localStorage.setItem('token', token);\n}\n\nexport default useToken;\n  "]},"metadata":{},"sourceType":"module"}