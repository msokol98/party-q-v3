{"ast":null,"code":"var _jsxFileName = \"/Users/mitchell/party-q/frontend/src/pages/components/JoinParty/JoinParty.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport useInput from 'hooks/useInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst JoinParty = () => {\n  _s();\n\n  const {\n    value: accessCode,\n    bind: bindAccessCode,\n    reset: resetAccessCode\n  } = useInput('');\n  const [error, setError] = useState();\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (isValid(accessCode)) {\n      alert(`Submitting Name ${accessCode}`);\n      resetAccessCode();\n    }\n  };\n\n  const isValid = accessCode => {};\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Access Code:\", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        ...bindAccessCode\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"submit\",\n      value: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this), error && /*#__PURE__*/_jsxDEV(\"h6\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 7\n  }, this);\n};\n\n_s(JoinParty, \"Aa3B9sPqMYfaevvoBfZXDTLRqoY=\", false, function () {\n  return [useInput];\n});\n\n_c = JoinParty;\nexport default JoinParty;\n\nvar _c;\n\n$RefreshReg$(_c, \"JoinParty\");","map":{"version":3,"sources":["/Users/mitchell/party-q/frontend/src/pages/components/JoinParty/JoinParty.js"],"names":["React","useState","useInput","JoinParty","value","accessCode","bind","bindAccessCode","reset","resetAccessCode","error","setError","handleSubmit","event","preventDefault","isValid","alert"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,gBAArB;;;AAEA,MAAMC,SAAS,GAAG,MAAM;AAAA;;AAEpB,QAAM;AAAEC,IAAAA,KAAK,EAAEC,UAAT;AAAqBC,IAAAA,IAAI,EAAEC,cAA3B;AAA2CC,IAAAA,KAAK,EAAEC;AAAlD,MAAsEP,QAAQ,CAAC,EAAD,CAApF;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBV,QAAQ,EAAlC;;AAEA,QAAMW,YAAY,GAAGC,KAAK,IAAI;AAC1BA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAGC,OAAO,CAACV,UAAD,CAAV,EAAwB;AACpBW,MAAAA,KAAK,CAAE,mBAAkBX,UAAW,EAA/B,CAAL;AACAI,MAAAA,eAAe;AAClB;AACJ,GAPD;;AASA,QAAMM,OAAO,GAAGV,UAAU,IAAI,CAE7B,CAFD;;AAIA,sBACE;AAAM,IAAA,QAAQ,EAAEO,YAAhB;AAAA,4BACE;AAAA,8CAEE;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAA,WAAyBL;AAAzB;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAKE;AAAO,MAAA,IAAI,EAAC,QAAZ;AAAqB,MAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,YALF,EAOGG,KAAK,iBAAI;AAAI,MAAA,SAAS,EAAC,OAAd;AAAA,gBAAuBA;AAAvB;AAAA;AAAA;AAAA;AAAA,YAPZ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWH,CA7BD;;GAAMP,S;UAE0ED,Q;;;KAF1EC,S;AA+BN,eAAeA,SAAf","sourcesContent":["import React, { useState } from 'react';\nimport useInput from 'hooks/useInput';\n\nconst JoinParty = () => {\n\n    const { value: accessCode, bind: bindAccessCode, reset: resetAccessCode } = useInput('');\n    const [error, setError] = useState();\n    \n    const handleSubmit = event => {\n        event.preventDefault();\n\n        if(isValid(accessCode)) {\n            alert(`Submitting Name ${accessCode}`);\n            resetAccessCode();\n        }\n    }\n\n    const isValid = accessCode => {\n        \n    }\n\n    return (\n      <form onSubmit={handleSubmit}>\n        <label>\n          Access Code:\n          <input type=\"number\" {...bindAccessCode} />\n        </label> \n        <input type=\"submit\" value=\"Submit\" />\n\n        {error && <h6 className=\"error\">{error}</h6>}\n      </form>\n    );\n}\n\nexport default JoinParty;"]},"metadata":{},"sourceType":"module"}