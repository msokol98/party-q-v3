{"ast":null,"code":"var _jsxFileName = \"/home/mitchell/party-q/frontend/src/pages/WS/WS.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport SockJsClient from 'react-stomp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SOCKET_URL = 'http://localhost:8080/ws';\n\nconst WS = () => {\n  _s();\n\n  const [message, setMessage] = useState('You server message here.');\n\n  let onConnected = () => {\n    console.log(\"Connected!!\");\n  };\n\n  let onMessageReceived = msg => {\n    setMessage(msg.message);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(SockJsClient, {\n      url: SOCKET_URL,\n      topics: ['/topic/party-updates'],\n      onConnect: onConnected,\n      onDisconnect: console.log(\"Disconnected!\"),\n      onMessage: msg => onMessageReceived(msg),\n      debug: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WS, \"2IBTGG3TqNo2oaIJjhFbdysA8Hg=\");\n\n_c = WS;\nexport default WS;\n\nvar _c;\n\n$RefreshReg$(_c, \"WS\");","map":{"version":3,"sources":["/home/mitchell/party-q/frontend/src/pages/WS/WS.js"],"names":["React","useState","SockJsClient","SOCKET_URL","WS","message","setMessage","onConnected","console","log","onMessageReceived","msg"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,YAAP,MAAyB,aAAzB;;AAEA,MAAMC,UAAU,GAAG,0BAAnB;;AAEA,MAAMC,EAAE,GAAG,MAAM;AAAA;;AACf,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBL,QAAQ,CAAC,0BAAD,CAAtC;;AAEA,MAAIM,WAAW,GAAG,MAAM;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACD,GAFD;;AAIA,MAAIC,iBAAiB,GAAIC,GAAD,IAAS;AAC/BL,IAAAA,UAAU,CAACK,GAAG,CAACN,OAAL,CAAV;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,YAAD;AACE,MAAA,GAAG,EAAEF,UADP;AAEE,MAAA,MAAM,EAAE,CAAC,sBAAD,CAFV;AAGE,MAAA,SAAS,EAAEI,WAHb;AAIE,MAAA,YAAY,EAAEC,OAAO,CAACC,GAAR,CAAY,eAAZ,CAJhB;AAKE,MAAA,SAAS,EAAEE,GAAG,IAAID,iBAAiB,CAACC,GAAD,CALrC;AAME,MAAA,KAAK,EAAE;AANT;AAAA;AAAA;AAAA;AAAA,YADF,eASE;AAAA,gBAAMN;AAAN;AAAA;AAAA;AAAA;AAAA,YATF,eAWE;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD,CA5BD;;GAAMD,E;;KAAAA,E;AA8BN,eAAeA,EAAf","sourcesContent":["import React, { useState } from 'react';\nimport SockJsClient from 'react-stomp';\n\nconst SOCKET_URL = 'http://localhost:8080/ws';\n\nconst WS = () => {\n  const [message, setMessage] = useState('You server message here.');\n\n  let onConnected = () => {\n    console.log(\"Connected!!\")\n  }\n\n  let onMessageReceived = (msg) => {\n    setMessage(msg.message);\n  }\n\n  return (\n    <div>\n      <SockJsClient\n        url={SOCKET_URL}\n        topics={['/topic/party-updates']}\n        onConnect={onConnected}\n        onDisconnect={console.log(\"Disconnected!\")}\n        onMessage={msg => onMessageReceived(msg)}\n        debug={false}\n      />\n      <div>{message}</div>\n\n      <form>\n          \n      </form>\n    </div>\n  );\n}\n\nexport default WS;"]},"metadata":{},"sourceType":"module"}