{"ast":null,"code":"var _jsxFileName = \"/home/mitchell/party-q/frontend/src/pages/Landing/Landing.js\",\n    _s = $RefreshSig$();\n\nimport { oauthURL } from 'config';\nimport crudClient from 'api/crudClient';\nimport spotifyClient from 'api/crudClient';\nimport useToken from 'hooks/useToken';\nimport Button from 'components/Button';\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Landing = () => {\n  _s();\n\n  const token = useToken();\n  const [userId, setUserId] = useState();\n  useEffect(() => {\n    fetch(\"https://api.spotify.com/v1/me\", {\n      headers: {\n        'Authorization': `Bearer ${token}`\n      }\n    }).then(res => res.json()).then(user => {\n      console.log(user);\n      return user.id;\n    }).then(setUserId);\n  }, [token]);\n  useEffect(() => {\n    if (!userId) return;\n    const membersAdapter = crudClient('members');\n    membersAdapter.single(userId).then(console.log).catch(error => {\n      const {\n        status\n      } = error.response;\n\n      if (status === 404) {\n        membersAdapter.create({\n          'id': userId,\n          token\n        });\n      }\n    });\n  }, [userId]);\n  return /*#__PURE__*/_jsxDEV(Button, {\n    onClick: () => window.location = oauthURL,\n    children: \"Login with Spotify\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Landing, \"GUbTJ3eYKDQWTfoEYq7fbI9XAtg=\", false, function () {\n  return [useToken];\n});\n\n_c = Landing;\nexport default Landing;\n\nvar _c;\n\n$RefreshReg$(_c, \"Landing\");","map":{"version":3,"sources":["/home/mitchell/party-q/frontend/src/pages/Landing/Landing.js"],"names":["oauthURL","crudClient","spotifyClient","useToken","Button","React","useEffect","useState","Landing","token","userId","setUserId","fetch","headers","then","res","json","user","console","log","id","membersAdapter","single","catch","error","status","response","create","window","location"],"mappings":";;;AACA,SAASA,QAAT,QAAyB,QAAzB;AAEA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,OAAOC,aAAP,MAA0B,gBAA1B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;AAEA,MAAMC,OAAO,GAAG,MAAM;AAAA;;AAElB,QAAMC,KAAK,GAAGN,QAAQ,EAAtB;AACA,QAAM,CAACO,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,EAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZM,IAAAA,KAAK,CAAC,+BAAD,EAAkC;AACnCC,MAAAA,OAAO,EAAE;AACL,yBAAkB,UAASJ,KAAM;AAD5B;AAD0B,KAAlC,CAAL,CAIGK,IAJH,CAIQC,GAAG,IAAKA,GAAG,CAACC,IAAJ,EAJhB,EAI4BF,IAJ5B,CAIiCG,IAAI,IAAI;AAAEC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AAAmB,aAAOA,IAAI,CAACG,EAAZ;AAAe,KAJ7E,EAI+EN,IAJ/E,CAIoFH,SAJpF;AAKH,GANQ,EAMN,CAACF,KAAD,CANM,CAAT;AAQAH,EAAAA,SAAS,CAAC,MAAM;AAEZ,QAAG,CAACI,MAAJ,EAAY;AAEZ,UAAMW,cAAc,GAAGpB,UAAU,CAAC,SAAD,CAAjC;AAEAoB,IAAAA,cAAc,CAACC,MAAf,CAAsBZ,MAAtB,EACKI,IADL,CACUI,OAAO,CAACC,GADlB,EAEKI,KAFL,CAEWC,KAAK,IAAI;AACZ,YAAM;AAAEC,QAAAA;AAAF,UAAaD,KAAK,CAACE,QAAzB;;AAEA,UAAGD,MAAM,KAAK,GAAd,EAAmB;AACfJ,QAAAA,cAAc,CAACM,MAAf,CAAsB;AAAC,gBAAMjB,MAAP;AAAeD,UAAAA;AAAf,SAAtB;AACH;AACJ,KARL;AASH,GAfQ,EAeN,CAACC,MAAD,CAfM,CAAT;AAiBA,sBACI,QAAC,MAAD;AAAQ,IAAA,OAAO,EAAE,MAAMkB,MAAM,CAACC,QAAP,GAAkB7B,QAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAGH,CAjCD;;GAAMQ,O;UAEYL,Q;;;KAFZK,O;AAmCN,eAAeA,OAAf","sourcesContent":["\nimport { oauthURL } from 'config';\n\nimport crudClient from 'api/crudClient';\nimport spotifyClient from 'api/crudClient';\nimport useToken from 'hooks/useToken';\n\nimport Button from 'components/Button';\nimport React, { useEffect, useState } from 'react';\n\nconst Landing = () => {\n\n    const token = useToken();\n    const [userId, setUserId] = useState();\n\n    useEffect(() => {\n        fetch(\"https://api.spotify.com/v1/me\", {\n            headers: {\n                'Authorization': `Bearer ${token}`\n            }\n        }).then(res =>  res.json()).then(user => { console.log(user); return user.id}).then(setUserId);\n    }, [token]); \n\n    useEffect(() => {\n\n        if(!userId) return;\n\n        const membersAdapter = crudClient('members');\n\n        membersAdapter.single(userId)\n            .then(console.log)\n            .catch(error => {\n                const { status } = error.response;\n\n                if(status === 404) {\n                    membersAdapter.create({'id': userId, token});\n                }\n            })\n    }, [userId]);\n\n    return(\n        <Button onClick={() => window.location = oauthURL}>Login with Spotify</Button>\n    );\n}\n \nexport default Landing;\n"]},"metadata":{},"sourceType":"module"}