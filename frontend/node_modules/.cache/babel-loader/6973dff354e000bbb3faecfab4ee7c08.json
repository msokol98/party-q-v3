{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { useLocation } from 'react-router-dom';\nimport { useQuery } from 'react-query';\nimport crudClient from 'api/crudClient';\nimport spotifyClient from 'api/spotifyClient';\nimport qs from 'qs';\n\nconst useToken = () => {\n  _s();\n\n  const location = useLocation();\n  const token = qs.parse(location.search, {\n    ignoreQueryPrefix: true\n  }).access_token;\n  const oldToken = localStorage.getItem('jwt');\n\n  if (!oldToken || oldToken !== token) {\n    updateToken(token);\n  }\n\n  return token;\n};\n\n_s(useToken, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\nconst updateToken = token => {\n  _s2();\n\n  const {\n    data: user\n  } = useQuery('spotifyUser', () => spotifyClient.getUser());\n  console.log(user); //crudClient('members').partialUpdate(id, {token}).then(console.log).catch(console.log);\n  //localStorage.setItem('token', oldToken);\n};\n\n_s2(updateToken, \"1MJZwZvN1HyPqYYt+s1UFBhDIA8=\", false, function () {\n  return [useQuery];\n});\n\nexport default useToken;","map":{"version":3,"sources":["/home/mitchell/party-q/frontend/src/hooks/useToken.js"],"names":["useLocation","useQuery","crudClient","spotifyClient","qs","useToken","location","token","parse","search","ignoreQueryPrefix","access_token","oldToken","localStorage","getItem","updateToken","data","user","getUser","console","log"],"mappings":";;;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,QAAT,QAAyB,aAAzB;AAEA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,OAAOC,aAAP,MAA0B,mBAA1B;AACA,OAAOC,EAAP,MAAe,IAAf;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AACnB,QAAMC,QAAQ,GAAGN,WAAW,EAA5B;AAEA,QAAMO,KAAK,GAAGH,EAAE,CAACI,KAAH,CAASF,QAAQ,CAACG,MAAlB,EAA0B;AAAEC,IAAAA,iBAAiB,EAAE;AAArB,GAA1B,EAAuDC,YAArE;AACA,QAAMC,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAAjB;;AAEA,MAAG,CAACF,QAAD,IAAaA,QAAQ,KAAKL,KAA7B,EAAoC;AAChCQ,IAAAA,WAAW,CAACR,KAAD,CAAX;AACH;;AAED,SAAOA,KAAP;AACH,CAXD;;GAAMF,Q;UACeL,W;;;AAYrB,MAAMe,WAAW,GAAGR,KAAK,IAAI;AAAA;;AACzB,QAAM;AAAES,IAAAA,IAAI,EAAEC;AAAR,MAAiBhB,QAAQ,CAAC,aAAD,EAAgB,MAAME,aAAa,CAACe,OAAd,EAAtB,CAA/B;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ,EAHyB,CAKzB;AACA;AACH,CAPD;;IAAMF,W;UACqBd,Q;;;AAQ3B,eAAeI,QAAf","sourcesContent":["import { useLocation } from 'react-router-dom';\nimport { useQuery } from 'react-query';\n\nimport crudClient from 'api/crudClient';\nimport spotifyClient from 'api/spotifyClient';\nimport qs from 'qs';\n\nconst useToken = () => {\n    const location = useLocation();\n\n    const token = qs.parse(location.search, { ignoreQueryPrefix: true }).access_token;\n    const oldToken = localStorage.getItem('jwt');\n    \n    if(!oldToken || oldToken !== token) {\n        updateToken(token);\n    }\n\n    return token;\n};\n\nconst updateToken = token => {\n    const { data: user } = useQuery('spotifyUser', () => spotifyClient.getUser());\n\n    console.log(user)\n\n    //crudClient('members').partialUpdate(id, {token}).then(console.log).catch(console.log);\n    //localStorage.setItem('token', oldToken);\n}\n\nexport default useToken;\n  "]},"metadata":{},"sourceType":"module"}