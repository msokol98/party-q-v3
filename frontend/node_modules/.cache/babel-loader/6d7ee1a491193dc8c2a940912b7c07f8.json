{"ast":null,"code":"var _s2 = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport qs from 'qs';\nimport useLocalStorage from 'hooks/useLocalStorage';\n\nconst useLocationChange = action => {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const location = useLocation();\n  const token = qs.parse(location.search, {\n    ignoreQueryPrefix: true\n  }).access_token;\n  useEffect(_s(() => {\n    _s();\n\n    return useLocalStorage('token', token);\n  }, \"cjcH6UV3r3BpJj6dUjZ/UwDNNow=\", false, function () {\n    return [useLocalStorage];\n  }), [token]);\n  useEffect(() => action(location), [action, location]);\n};\n\n_s2(useLocationChange, \"Fsnn4T0K08C2NlVrqWhZtVJucvU=\", false, function () {\n  return [useLocation];\n});\n\nexport default useLocationChange;","map":{"version":3,"sources":["/home/mitchell/party-q/frontend/src/hooks/useLocationChange.js"],"names":["useEffect","useLocation","qs","useLocalStorage","useLocationChange","action","location","token","parse","search","ignoreQueryPrefix","access_token"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,OAAOC,EAAP,MAAe,IAAf;AACA,OAAOC,eAAP,MAA4B,uBAA5B;;AAEA,MAAMC,iBAAiB,GAAGC,MAAM,IAAI;AAAA;;AAAA;;AAChC,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA,QAAMM,KAAK,GAAGL,EAAE,CAACM,KAAH,CAASF,QAAQ,CAACG,MAAlB,EAA0B;AAAEC,IAAAA,iBAAiB,EAAE;AAArB,GAA1B,EAAuDC,YAArE;AAEAX,EAAAA,SAAS,IAAC;AAAA;;AAAA,WAAMG,eAAe,CAAC,OAAD,EAAUI,KAAV,CAArB;AAAA,GAAD;AAAA,YAAOJ,eAAP;AAAA,MAAwC,CAACI,KAAD,CAAxC,CAAT;AAEAP,EAAAA,SAAS,CAAC,MAAMK,MAAM,CAACC,QAAD,CAAb,EAAyB,CAACD,MAAD,EAASC,QAAT,CAAzB,CAAT;AACH,CARD;;IAAMF,iB;UACeH,W;;;AASrB,eAAeG,iBAAf","sourcesContent":["import { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport qs from 'qs';\nimport useLocalStorage from 'hooks/useLocalStorage';\n\nconst useLocationChange = action => {\n    const location = useLocation();\n\n    const token = qs.parse(location.search, { ignoreQueryPrefix: true }).access_token;\n\n    useEffect(() => useLocalStorage('token', token), [token]);\n\n    useEffect(() => action(location), [action, location]);\n};\n\nexport default useLocationChange;\n  "]},"metadata":{},"sourceType":"module"}