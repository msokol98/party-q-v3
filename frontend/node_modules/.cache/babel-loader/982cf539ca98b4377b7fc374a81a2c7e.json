{"ast":null,"code":"const client = new StompJs.Client({\n  brokerURL: 'ws://localhost:15674/ws',\n  connectHeaders: {\n    login: 'user',\n    passcode: 'password'\n  },\n  debug: function (str) {\n    console.log(str);\n  },\n  reconnectDelay: 5000,\n  heartbeatIncoming: 4000,\n  heartbeatOutgoing: 4000\n});\n\nclient.onConnect = function (frame) {// Do something, all subscribes must be done is this callback\n  // This is needed because this will be executed after a (re)connect\n};\n\nclient.onStompError = function (frame) {\n  // Will be invoked in case of error encountered at Broker\n  // Bad login/passcode typically will cause an error\n  // Complaint brokers will set `message` header with a brief message. Body may contain details.\n  // Compliant brokers will terminate the connection after any error\n  console.log('Broker reported error: ' + frame.headers['message']);\n  console.log('Additional details: ' + frame.body);\n};\n\nclient.activate();","map":{"version":3,"sources":["/home/mitchell/party-q/frontend/src/pages/WS/WS.js"],"names":["client","StompJs","Client","brokerURL","connectHeaders","login","passcode","debug","str","console","log","reconnectDelay","heartbeatIncoming","heartbeatOutgoing","onConnect","frame","onStompError","headers","body","activate"],"mappings":"AAAA,MAAMA,MAAM,GAAG,IAAIC,OAAO,CAACC,MAAZ,CAAmB;AAE9BC,EAAAA,SAAS,EAAE,yBAFmB;AAG9BC,EAAAA,cAAc,EAAE;AACdC,IAAAA,KAAK,EAAE,MADO;AAEdC,IAAAA,QAAQ,EAAE;AAFI,GAHc;AAO9BC,EAAAA,KAAK,EAAE,UAAUC,GAAV,EAAe;AACpBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD,GAT6B;AAU9BG,EAAAA,cAAc,EAAE,IAVc;AAW9BC,EAAAA,iBAAiB,EAAE,IAXW;AAY9BC,EAAAA,iBAAiB,EAAE;AAZW,CAAnB,CAAf;;AAeEb,MAAM,CAACc,SAAP,GAAmB,UAAUC,KAAV,EAAiB,CAClC;AACA;AACD,CAHD;;AAKAf,MAAM,CAACgB,YAAP,GAAsB,UAAUD,KAAV,EAAiB;AACrC;AACA;AACA;AACA;AACAN,EAAAA,OAAO,CAACC,GAAR,CAAY,4BAA4BK,KAAK,CAACE,OAAN,CAAc,SAAd,CAAxC;AACAR,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAyBK,KAAK,CAACG,IAA3C;AACD,CAPD;;AASAlB,MAAM,CAACmB,QAAP","sourcesContent":["const client = new StompJs.Client({\n    \n    brokerURL: 'ws://localhost:15674/ws',\n    connectHeaders: {\n      login: 'user',\n      passcode: 'password',\n    },\n    debug: function (str) {\n      console.log(str);\n    },\n    reconnectDelay: 5000,\n    heartbeatIncoming: 4000,\n    heartbeatOutgoing: 4000,\n  });\n  \n  client.onConnect = function (frame) {\n    // Do something, all subscribes must be done is this callback\n    // This is needed because this will be executed after a (re)connect\n  };\n  \n  client.onStompError = function (frame) {\n    // Will be invoked in case of error encountered at Broker\n    // Bad login/passcode typically will cause an error\n    // Complaint brokers will set `message` header with a brief message. Body may contain details.\n    // Compliant brokers will terminate the connection after any error\n    console.log('Broker reported error: ' + frame.headers['message']);\n    console.log('Additional details: ' + frame.body);\n  };\n  \n  client.activate();"]},"metadata":{},"sourceType":"module"}