{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useLocation } from 'react-router-dom';\nimport crudClient from 'api/crudClient';\nimport spotifyClient from 'api/spotifyClient';\nimport qs from 'qs';\n\nconst useToken = () => {\n  _s();\n\n  const location = useLocation();\n  const token = qs.parse(location.search, {\n    ignoreQueryPrefix: true\n  }).access_token;\n\n  if (oldToken !== token) {\n    updateToken(token);\n  }\n\n  return token;\n};\n\n_s(useToken, \"pkHmaVRPskBaU4tMJuJJpV42k1I=\", false, function () {\n  return [useLocation];\n});\n\nconst updateToken = token => {\n  localStorage.setItem('token', token);\n  const membersAdapter = crudClient('members');\n  spotifyClient.getUser().then(user => user.id).then(id => membersAdapter.partialUpdate(id, {\n    token\n  })).catch(error => {\n    const {\n      status\n    } = error.response;\n\n    if (status === 404) {\n      createMember(membersAdapter, token);\n    }\n  });\n};\n\nconst createMember = (membersAdapter, token) => {\n  spotifyClient.getUser().then(user => user.id).then(id => membersAdapter.create({\n    id,\n    token\n  }));\n};\n\nexport default useToken;","map":{"version":3,"sources":["/Users/mitchell/party-q/frontend/src/hooks/useToken.js"],"names":["useLocation","crudClient","spotifyClient","qs","useToken","location","token","parse","search","ignoreQueryPrefix","access_token","oldToken","updateToken","localStorage","setItem","membersAdapter","getUser","then","user","id","partialUpdate","catch","error","status","response","createMember","create"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,OAAOC,UAAP,MAAuB,gBAAvB;AACA,OAAOC,aAAP,MAA0B,mBAA1B;AACA,OAAOC,EAAP,MAAe,IAAf;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEA,QAAMM,KAAK,GAAGH,EAAE,CAACI,KAAH,CAASF,QAAQ,CAACG,MAAlB,EAA0B;AAAEC,IAAAA,iBAAiB,EAAE;AAArB,GAA1B,EAAuDC,YAArE;;AAEA,MAAGC,QAAQ,KAAKL,KAAhB,EAAuB;AACnBM,IAAAA,WAAW,CAACN,KAAD,CAAX;AACH;;AAED,SAAOA,KAAP;AACH,CAXD;;GAAMF,Q;UAEeJ,W;;;AAWrB,MAAMY,WAAW,GAAGN,KAAK,IAAI;AACzBO,EAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BR,KAA9B;AAEA,QAAMS,cAAc,GAAGd,UAAU,CAAC,SAAD,CAAjC;AAEAC,EAAAA,aAAa,CACRc,OADL,GAEKC,IAFL,CAEUC,IAAI,IAAIA,IAAI,CAACC,EAFvB,EAGKF,IAHL,CAGUE,EAAE,IAAIJ,cAAc,CAACK,aAAf,CAA6BD,EAA7B,EAAiC;AAACb,IAAAA;AAAD,GAAjC,CAHhB,EAIKe,KAJL,CAIWC,KAAK,IAAI;AACZ,UAAM;AAAEC,MAAAA;AAAF,QAAaD,KAAK,CAACE,QAAzB;;AAEA,QAAGD,MAAM,KAAK,GAAd,EAAmB;AACfE,MAAAA,YAAY,CAACV,cAAD,EAAiBT,KAAjB,CAAZ;AACH;AACJ,GAVL;AAWH,CAhBD;;AAkBA,MAAMmB,YAAY,GAAG,CAACV,cAAD,EAAiBT,KAAjB,KAA2B;AAC5CJ,EAAAA,aAAa,CACRc,OADL,GAEKC,IAFL,CAEUC,IAAI,IAAIA,IAAI,CAACC,EAFvB,EAGKF,IAHL,CAGUE,EAAE,IAAIJ,cAAc,CAACW,MAAf,CAAsB;AAACP,IAAAA,EAAD;AAAKb,IAAAA;AAAL,GAAtB,CAHhB;AAIH,CALD;;AAOA,eAAeF,QAAf","sourcesContent":["import { useLocation } from 'react-router-dom';\n\nimport crudClient from 'api/crudClient';\nimport spotifyClient from 'api/spotifyClient';\nimport qs from 'qs';\n\nconst useToken = () => {\n\n    const location = useLocation();\n\n    const token = qs.parse(location.search, { ignoreQueryPrefix: true }).access_token;\n    \n    if(oldToken !== token) {\n        updateToken(token);\n    }\n\n    return token;\n};\n\nconst updateToken = token => {\n    localStorage.setItem('token', token);\n\n    const membersAdapter = crudClient('members');\n\n    spotifyClient\n        .getUser()\n        .then(user => user.id)\n        .then(id => membersAdapter.partialUpdate(id, {token}))\n        .catch(error => {\n            const { status } = error.response;\n\n            if(status === 404) {\n                createMember(membersAdapter, token);\n            }\n        })\n}\n\nconst createMember = (membersAdapter, token) => {\n    spotifyClient\n        .getUser()\n        .then(user => user.id)\n        .then(id => membersAdapter.create({id, token}));\n}\n\nexport default useToken;\n  "]},"metadata":{},"sourceType":"module"}